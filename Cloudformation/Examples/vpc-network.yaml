AWSTemplateFormatVersion: 2010-09-09
Description: >
    This template deploys a VPC, with a pair of public subnets spread
    across two Availabilty Zones. It deploys an Internet Gateway, with a default
    route on the public subnets.

Parameters:
  MasterStackName:
    Type: String
    Description: An environment name that will be prefixed to resource names

  VPCCidr:
    Type: String
    Default: 172.16.0.0/16
    MinLength: 10
    MaxLength: 18
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'

  PublicSubnetACidr:
    Type: String
    Default: 172.16.10.0/24
    MinLength: 10
    MaxLength: 18
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'

  PublicSubnetBCidr:
    Type: String
    Default: 172.16.11.0/24
    MinLength: 10
    MaxLength: 18
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: VPC
        Parameters:
          - VPCCidr
      - Label:
          default: Subnets
        Parameters:
          - PublicSubnetACidr
          - PublicSubnetBCidr

Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock: !Ref VPCCidr
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Ref MasterStackName

  # ----------------------------------------
  # Public Resource
  # ----------------------------------------

  PublicSubnetA:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''
      CidrBlock:
        Ref: PublicSubnetACidr
      Tags:
        - Key: Name
          Value: PublicASubnetAZ0

  PublicSubnetB:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select
         - 1
         - !GetAZs ''
      CidrBlock:
        Ref: PublicSubnetBCidr
      Tags:
        - Key: Name
          Value: PublicBSubnetZA1

  # ----------------------------------------
  # Internet Gateway
  # Route Table
  # Route
  # ----------------------------------------

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: InternetGateway
        - Key: Network
          Value: !Ref VPCCidr

  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnetARouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: PublicSubnetARouteTable
    DependsOn: VPCGatewayAttachment

  PublicSubnetBRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: PublicSubnetBRouteTable
    DependsOn: VPCGatewayAttachment

  PublicSubnetARoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PublicSubnetARouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetBRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PublicSubnetBRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  # ----------------------------------------
  # Route Table Association
  # Network Acl
  # ----------------------------------------

  PublicSubnetARTAss:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PublicSubnetARouteTable
      SubnetId: !Ref PublicSubnetA

  PublicSubnetBRTAss:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PublicSubnetBRouteTable
      SubnetId: !Ref PublicSubnetB

  PublicNetworkAcl:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref VPC

  PublicSubnetANetAclAss:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      SubnetId: !Ref PublicSubnetA

  PublicSubnetBNetAclAss:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      SubnetId: !Ref PublicSubnetB

  PublicAInNetworkAcl:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
    DependsOn: PublicNetworkAcl

  PublicAOutNetworkAcl:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
    DependsOn: PublicNetworkAcl

Outputs:
  VPCID:
    Value: !Ref VPC
    Description: VPC Network

  PublicSubnetA:
    Value: !Ref PublicSubnetA
    Description: 'Public subnet A'

  PublicSubnetB:
    Value: !Ref PublicSubnetB
    Description: 'Public subnet B'

  PublicSubnets:
    Value: !Join
      - ','
      - - !Ref PublicSubnetA
        - !Ref PublicSubnetB
    Description: Public subnets