Description: >
    This template deploys a VPC, with a pair of public and private subnets spread
    across two Availabilty Zones. It deploys an Internet Gateway, with a default
    route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ),
    and default routes for them in the private subnets.
    It then deploys a highly available ECS cluster using an AutoScaling Group, with
    ECS hosts distributed across multiple Availability Zones.
    Finally, it deploys a pair of example ECS services from containers published in
    Amazon EC2 Container Registry (Amazon ECR).
    Last Modified: 22nd September 2016
    Author: Paul Maddox <pmaddox@amazon.com>
Resources:

  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.eu-central-1.amazonaws.com/test-yarema/VPCPP.yaml
      Parameters:
        EnvironmentName:    !Ref AWS::StackName
        VpcCIDR:            10.10.0.0/16
        PublicSubnet1CIDR:  10.10.8.0/21
        PublicSubnet2CIDR:  10.10.16.0/21
        PrivateSubnet1CIDR: 10.10.24.0/21
        PrivateSubnet2CIDR: 10.10.32.0/21

  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.eu-central-1.amazonaws.com/test-yarema/SecurityGroup.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC

  ALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.eu-central-1.amazonaws.com/test-yarema/LoadBalancer.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC
        Subnets: !GetAtt VPC.Outputs.PublicSubnets
        SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup

  ECS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.eu-central-1.amazonaws.com/test-yarema/ECSCluster.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        InstanceType: t2.micro
        ClusterSize: 2
        VPC: !GetAtt VPC.Outputs.VPC
        SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
        SSHSecurityGroup: !GetAtt SecurityGroups.Outputs.SSHSecurityGroup
        Subnets: !GetAtt VPC.Outputs.PrivateSubnets
        LoadBalancer: !GetAtt ALB.Outputs.LoadBalancer

  ProductService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.eu-central-1.amazonaws.com/test-yarema/Service_test2.yaml
      Parameters:
        VPC: !GetAtt VPC.Outputs.VPC
        Cluster: !GetAtt ECS.Outputs.Cluster
#        DesiredCount: 1
        Listener: !GetAtt ALB.Outputs.Listener
#        Path: /
#
#  WebsiteService:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: https://s3.eu-central-1.amazonaws.com/test-yarema/WebService.yaml
#      Parameters:
#        VPC: !GetAtt VPC.Outputs.VPC
#        Cluster: !GetAtt ECS.Outputs.Cluster
#        DesiredCount: 2
#        ProductServiceUrl: !Join [ "/", [ !GetAtt ALB.Outputs.LoadBalancerUrl, "products" ]]
#        Listener: !GetAtt ALB.Outputs.Listener
#        Path: /
#        ECSServiceAutoScalingRoleARN: !GetAtt ECS.Outputs.ECSServiceAutoScalingRole
#
#    LifecycleHook:
#        Type: AWS::CloudFormation::Stack
#        Properties:
#            TemplateURL: https://s3.eu-central-1.amazonaws.com/test-yarema/lifecyclehook.yaml
#            Parameters:
#                Cluster: !GetAtt ECS.Outputs.Cluster
#                ECSAutoScalingGroupName: !GetAtt ECS.Outputs.ECSAutoScalingGroupName

#Outputs:
#
#    ProductServiceUrl:
#        Description: The URL endpoint for the product service
#        Value: !Join [ "/", [ !GetAtt ALB.Outputs.LoadBalancerUrl, "products" ]]
#
#    WebsiteServiceUrl:
#        Description: The URL endpoint for the website service
#        Value: !Join ["", [ !GetAtt ALB.Outputs.LoadBalancerUrl, "/" ]]